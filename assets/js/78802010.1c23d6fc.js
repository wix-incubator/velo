"use strict";(self.webpackChunkvelo_bind_docs=self.webpackChunkvelo_bind_docs||[]).push([[146],{876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8624:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7896),a=(r(2784),r(876));const i={sidebar_position:2},o="Working with Repeaters",s={unversionedId:"repeaters",id:"repeaters",title:"Working with Repeaters",description:"A Repeater is a unique Wix Editor Element which is responsible for displaying a list of elements from either a data-set (dynamic) or an array set by Velo code).",source:"@site/docs/repeaters.md",sourceDirName:".",slug:"/repeaters",permalink:"/repeaters",draft:!1,editUrl:"https://github.com/wix-incubator/velo/tree/main/docs/repeaters.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Dynamic Content",permalink:"/dynamic-content"},next:{title:"Full Example - Counter",permalink:"/counter"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"working-with-repeaters"},"Working with Repeaters"),(0,a.kt)("p",null,"A ",(0,a.kt)("a",{parentName:"p",href:"https://www.wix.com/velo/reference/$w/repeater"},"Repeater")," is a unique Wix Editor Element which is responsible for displaying a list of elements from either a data-set (dynamic) or an array set by Velo code).\nConsider a Wix site with a repeater element (",(0,a.kt)("inlineCode",{parentName:"p"},"#repeater"),"), every item in the repeater represents an item in ",(0,a.kt)("inlineCode",{parentName:"p"},"state.list"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Repeater Example",src:r(5198).Z,width:"1191",height:"183"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { makeAutoObservable, bind } from "@wix/velo-bind";\n\nconst state = makeAutoObservable({\n  list: [{ value: 1 }, { value: 2 }],\n});\nconst { repeater } = bind($w);\n\nrepeater.data = () => state.list;\nrepeater.item = ($item, data, index) => {\n  // pass bind the $item selector to get the bound elements of a single item\n  const { label } = bind($item);\n  label.text = () => list[index].value;\n};\n')))}m.isMDXComponent=!0},5198:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/repeater-d0ac51a54ae2a351ae0aa8101f74b232.png"}}]);